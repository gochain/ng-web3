{"version":3,"file":"gochain-ng-web3.js","sources":["ng://gochain-ng-web3/lib/gochain-ng-web3.service.ts"],"sourcesContent":["/*CORE*/\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\nimport {fromPromise} from 'rxjs/internal-compatibility';\nimport {catchError, map, tap} from 'rxjs/operators';\n/*WEB3*/\nimport Web3 from 'web3';\nimport {Account} from 'web3-eth-accounts';\nimport {SignedTransaction, TransactionReceipt} from 'web3-core';\n\nclass InitConfig {\n  rpcUrl: string;\n}\n\ninterface IGochainWeb3Service {\n  initialize(config: InitConfig);\n\n  initializePlugin();\n\n  activatePlugin();\n\n  getPluginAccountAddress();\n\n  createAccount();\n\n  /*openAccount(privateKey: string);*/\n\n  closeAccount();\n\n  /*getBalance();*/\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GochainNgWeb3Service implements IGochainWeb3Service {\n  private _metamaskInstalled: boolean;\n  private _metamaskConfigured: boolean;\n  private _metamaskActivated: boolean;\n  private _config: InitConfig;\n  private _gochainNetId: number;\n\n  set metamaskInstalled(value: boolean) {\n    this._metamaskInstalled = value;\n    this.metamaskInstalled$.next(value);\n  }\n\n  set metamaskConfigured(value: boolean) {\n    this._metamaskConfigured = value;\n    this.metamaskConfigured$.next(value);\n  }\n\n  set metamaskActivated(value: boolean) {\n    this._metamaskActivated = value;\n    this.metamaskActivated$.next(value);\n  }\n\n  metamaskInstalled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n  metamaskConfigured$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n  metamaskActivated$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n  ready$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n  accountBalance: string;\n  gochainWeb3: Web3;\n  pluginWeb3: Web3;\n  accountAddress: string;\n  account: Account;\n\n  get web3(): Web3 {\n    if (this._metamaskConfigured && this._metamaskInstalled) {\n      return this.pluginWeb3;\n    }\n    return this.gochainWeb3;\n  }\n\n  constructor() {\n  }\n\n  initialize(config: InitConfig): Observable<boolean> {\n    this._config = config;\n    if (!config.rpcUrl) {\n      return throwError('rpc url hasn\\'t been provided');\n    }\n    this.gochainWeb3 = new Web3(new Web3.providers.HttpProvider(config.rpcUrl), null, {transactionConfirmationBlocks: 1});\n\n    return fromPromise(this.gochainWeb3.eth.net.getId()).pipe(\n      catchError((e: Error) => {\n        return throwError('Can\\'t get GoChain network id');\n      }),\n      map(v => !!v),\n    );\n  }\n\n  initializePlugin(): Observable<any> {\n    if (!this.gochainWeb3) {\n      return throwError('initialize first');\n    }\n    if (!this._gochainNetId) {\n      return throwError('gochain network id is not provided');\n    }\n\n    this.pluginWeb3 = new Web3(Web3.givenProvider, null, {transactionConfirmationBlocks: 1});\n\n    if (!this.pluginWeb3.currentProvider) {\n      this.metamaskInstalled = false;\n      this.metamaskConfigured = false;\n      return throwError('metamask is not installed');\n    }\n\n    return fromPromise(this.pluginWeb3.eth.net.getId()).pipe(\n      catchError((e: Error) => {\n        this.metamaskInstalled = true;\n        this.metamaskConfigured = false;\n        return throwError('Metamask installed but not configured properly - can\\'t get network id from Metamask');\n      }),\n      map((metamaskNetID: number) => {\n        if (this._gochainNetId !== metamaskNetID) {\n          this.metamaskInstalled = true;\n          this.metamaskConfigured = false;\n          return throwError(`Metamask installed but misconfigured - network ID mismatch (must use GoChain ${this._gochainNetId} - e.g. by pointing to ${this._config.rpcUrl})`);\n        }\n        this.metamaskInstalled = true;\n        this.metamaskConfigured = true;\n        this.getPluginAccountAddress();\n        return true;\n      }),\n    );\n  }\n\n  activatePlugin(): Observable<any> {\n    return fromPromise((window as any).ethereum.enable()).pipe(\n      catchError((e) => {\n        this.metamaskActivated = false;\n        return throwError('Access haven\\'t been granted');\n      }),\n      tap(() => {\n        this.metamaskActivated = true;\n      }),\n    );\n  }\n\n  getPluginAccountAddress(): void {\n    fromPromise(this.pluginWeb3.eth.getAccounts()).subscribe((accounts: string[]) => {\n      this.accountAddress = accounts[0];\n    });\n  }\n\n  createAccount() {\n    return !!this.web3 ? this.web3.eth.accounts.create() : null;\n  }\n\n  /*protected _openAccount(privateKey: string) {\n    if (privateKey.length === 64 && privateKey.indexOf('0x') !== 0) {\n      privateKey = '0x' + privateKey;\n    }\n    if (privateKey.length !== 66) {\n      throw Error('Given private key is not valid');\n    }\n    try {\n      this.account = this.gochainWeb3.eth.accounts.privateKeyToAccount(privateKey);\n    } catch (e) {\n      throw e;\n    }\n    return this.account;\n  }*/\n\n  closeAccount() {\n    this.account = null;\n    this.accountAddress = null;\n    this.accountBalance = null;\n  }\n\n  /*getBalance() {\n    return fromPromise(this.gochainWeb3.eth.getBalance(this.account.address)).pipe(\n      map((balance: string) => {\n        this.accountBalance = this.gochainWeb3.utils.fromWei(balance, 'ether').toString();\n        return this.accountBalance;\n      }),\n    );\n  }*/\n\n  sendSignedTx(signed: SignedTransaction): Observable<TransactionReceipt> {\n    return fromPromise(this.gochainWeb3.eth.sendSignedTransaction(signed.rawTransaction));\n  }\n\n  isAddress(address: string) {\n    return this.gochainWeb3.utils.isAddress(address);\n  }\n}\n"],"names":[],"mappings":"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"}